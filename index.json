[{"authors":null,"categories":null,"content":"Egor Starovoytov is a student of computer science at the RUDN University. His research interests include mathematics, programming, computer architecture and digital electronics.\n","date":1653609600,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":1653609600,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"","publishdate":"0001-01-01T00:00:00Z","relpermalink":"","section":"authors","summary":"Egor Starovoytov is a student of computer science at the RUDN University. His research interests include mathematics, programming, computer architecture and digital electronics.","tags":null,"title":"Egor Starovoytov","type":"authors"},{"authors":[],"categories":null,"content":" Click on the Slides button above to view the built-in slides feature.   Slides can be added in a few ways:\n Create slides using Wowchemy’s Slides feature and link using slides parameter in the front matter of the talk file Upload an existing slide deck to static/ and link using url_slides parameter in the front matter of the talk file Embed your slides (e.g. Google Slides) or presentation video on this page using shortcodes.  Further event details, including page elements such as image galleries, can be added to the body of this page.\n","date":1906549200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1906549200,"objectID":"a8edef490afe42206247b6ac05657af0","permalink":"https://example.com/talk/example-talk/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/talk/example-talk/","section":"event","summary":"An example talk using Wowchemy's Markdown slides feature.","tags":[],"title":"Example Talk","type":"event"},{"authors":null,"categories":null,"content":"","date":1653609600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1653609600,"objectID":"b13601745670daae8c6533786361db4b","permalink":"https://example.com/project/beap/","publishdate":"2022-05-27T00:00:00Z","relpermalink":"/project/beap/","section":"project","summary":"Bi-parental heap data structure implementation in Rust","tags":["Algorithms"],"title":"Bi-parental heap data structure implementation in Rust","type":"project"},{"authors":null,"categories":null,"content":"","date":1653609600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1653609600,"objectID":"18cc04a50a0ca49bfe104bebd73d2f41","permalink":"https://example.com/project/binary-search-tree/","publishdate":"2022-05-27T00:00:00Z","relpermalink":"/project/binary-search-tree/","section":"project","summary":"Binary search tree implementation in Rust","tags":["Data structures","Algorithms"],"title":"Binary search tree implementation in Rust","type":"project"},{"authors":null,"categories":null,"content":"","date":1653609600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1653609600,"objectID":"327523f4052e9f1e2d7afbc8f22ab3ce","permalink":"https://example.com/project/mexset/","publishdate":"2022-05-27T00:00:00Z","relpermalink":"/project/mexset/","section":"project","summary":"Implementing a set with MEX support","tags":["Data structures","Algorithms"],"title":"Implementing a set with MEX support","type":"project"},{"authors":null,"categories":null,"content":"","date":1653609600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1653609600,"objectID":"2ffdb2c645903496b22dcf2c2534c139","permalink":"https://example.com/project/weak-heap/","publishdate":"2022-05-27T00:00:00Z","relpermalink":"/project/weak-heap/","section":"project","summary":"Weak heap data structure implementation in Rust","tags":["Data structures","Algorithms"],"title":"Weak heap data structure implementation in Rust","type":"project"},{"authors":["Egor Starovoytov"],"categories":["Demo"],"content":"Что сделал На этой неделе я сдал лабораторные работы №9 и №10 и выполнил четвертый этап индивидуального проекта.\n","date":1653609600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1653609600,"objectID":"d9d0dbcaba273c53e378c402a0c57f34","permalink":"https://example.com/post/4th-week/","publishdate":"2022-05-27T00:00:00Z","relpermalink":"/post/4th-week/","section":"post","summary":"16.05.2022 - 22.05.2022","tags":["Academic"],"title":"Пост по четвертой неделе","type":"post"},{"authors":["Egor Starovoytov"],"categories":["Demo"],"content":"Язык научного программирования В компьютерном программировании , научный язык программирования может относиться к двум степеням той же концепции.\nВ широком смысле научный язык программирования - это язык программирования, который широко используется в вычислительной науке и вычислительной математике . В этом смысле C / C ++ и Python [1] можно рассматривать как языки научного программирования.\nВ более широком смысле научный язык программирования - это язык, который разработан и оптимизирован для использования математических формул и матриц . [2] Такие языки характеризуются не только наличием библиотек, выполняющих математические или научные функции, но и синтаксисом самого языка. [3] Например, ни C ++, ни Python не имеют встроенных типов матриц или функций для матричной арифметики (сложение, умножение и т. Д.); вместо этого эта функция доступна через стандартные библиотеки. Языки научного программирования в более строгом смысле включают ALGOL , APL , Fortran , J , Julia ,Maple , MATLAB и R . [4] [5]\nЯзыки научного программирования не следует путать с научным языком в целом, который свободно относится к более высоким стандартам точности, правильности и краткости, ожидаемым от практиков научного метода .\n","date":1653609600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1653609600,"objectID":"7145199130b445f7d7fba3b046994ec5","permalink":"https://example.com/post/sc-prog-lang/","publishdate":"2022-05-27T00:00:00Z","relpermalink":"/post/sc-prog-lang/","section":"post","summary":"Языки научного программирования","tags":["Academic"],"title":"Языки научного программироания","type":"post"},{"authors":["Egor Starovoytov"],"categories":["Demo"],"content":"Markdown Оформлять отчет нужно красиво.\n","date":1652832000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1652832000,"objectID":"f4303a94c7461fba42870f25c580fa30","permalink":"https://example.com/post/report-design/","publishdate":"2022-05-18T00:00:00Z","relpermalink":"/post/report-design/","section":"post","summary":"Оформление отчета","tags":["Academic"],"title":"Оформление отчета","type":"post"},{"authors":["Egor Starovoytov"],"categories":["Demo"],"content":"Что сделал На этой неделе я сдал лабораторные работы №7 и №8 и выполнил трети1 этап индивидуального проекта.\n","date":1652832000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1652832000,"objectID":"9cdf3b545e2c9e9d6d8c89aa988f2c47","permalink":"https://example.com/post/3rd-week/","publishdate":"2022-05-18T00:00:00Z","relpermalink":"/post/3rd-week/","section":"post","summary":"9.05.2022 - 15.05.2022","tags":["Academic"],"title":"Пост по третьей неделе","type":"post"},{"authors":["Egor Starovoytov"],"categories":["Demo"],"content":"Markdown Облегчённый язык разметки, созданный с целью обозначения форматирования в простом тексте, с максимальным сохранением его читаемости человеком, и пригодный для машинного преобразования в языки для продвинутых публикаций.\n","date":1652486400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1652486400,"objectID":"bd238f54b82fdcd586f8f7e438599565","permalink":"https://example.com/post/markdown/","publishdate":"2022-05-14T00:00:00Z","relpermalink":"/post/markdown/","section":"post","summary":"Язык разметки Markdown","tags":["Academic"],"title":"Язык разметки Markdown","type":"post"},{"authors":["Egor Starovoytov"],"categories":["Demo"],"content":"Что сделал На этой неделе я сдал лабораторные работы №5 и №6 и выполнил второй этап индивидуального проекта.\n","date":1652400000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1652400000,"objectID":"2010b652c20718ade3157ad27bc63028","permalink":"https://example.com/post/2nd-week/","publishdate":"2022-05-13T00:00:00Z","relpermalink":"/post/2nd-week/","section":"post","summary":"02.05.2022 - 08.05.2022","tags":["Academic"],"title":"Пост по второй неделе","type":"post"},{"authors":["Egor Starovoytov"],"categories":["Demo"],"content":"Что сделал На этой неделе я сдал лабораторные работы №3 и №4 и выполнил первый этап индивидуального проекта.\n","date":1651881600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1651881600,"objectID":"675c899bddb322ab71e1109e5901f35a","permalink":"https://example.com/post/1st-week/","publishdate":"2022-05-07T00:00:00Z","relpermalink":"/post/1st-week/","section":"post","summary":"25.04.2022 - 01.05.2022","tags":["Academic"],"title":"Пост по первой неделе","type":"post"},{"authors":["Egor Starovoytov","吳恩達"],"categories":["Demo","教程"],"content":"Системы контроля версий. Общие понятия Системы контроля версий (Version Control System, VCS) применяются при работе нескольких человек над одним проектом. Обычно основное дерево проекта хранится в локальном или удалённом репозитории, к которому настроен доступ для участников проекта. При внесении изменений в содержание проекта система контроля версий позволяет их фиксировать, совмещать изменения, произведённые разными участниками проекта, производить откат к любой более ранней версии проекта, если это требуется. В классических системах контроля версий используется централизованная модель, предполагающая наличие единого репозитория для хранения файлов. Выполнение большинства функций по управлению версиями осуществляется специальным сервером. Участник проекта (пользователь) перед началом работы посредством определённых команд получает нужную ему версию файлов. После внесения изменений, пользователь размещает новую версию в хранилище. При этом предыдущие версии не удаляются из центрального хранилища и к ним можно вернуться в любой момент. Сервер может сохранять не полную версию изменённых файлов, а производить так называемую дельтакомпрессию — сохранять только изменения между последовательными версиями, что позволяет уменьшить объём хранимых данных. Системы контроля версий поддерживают возможность отслеживания и разрешения конфликтов, которые могут возникнуть при работе нескольких человек над одним файлом. Можно объединить (слить) изменения, сделанные разными участниками (автоматически или вручную), вручную выбрать нужную версию, отменить изменения вовсе или заблокировать файлы для изменения. В зависимости от настроек блокировка не позволяет другим пользователям получить рабочую копию или препятствует изменению рабочей копии файла средствами файловой системы ОС, обеспечивая таким образом, привилегированный доступ только одному пользователю, работающему с файлом. Системы контроля версий также могут обеспечивать дополнительные, более гибкие функциональные возможности. Например, они могут поддерживать работу с несколькими версиями одного файла, сохраняя общую историю изменений до точки ветвления версий и собственные истории изменений каждой ветви. Кроме того, обычно доступна информация о том, кто из участников, когда и какие изменения вносил. Обычно такого рода информация хранится в журнале изменений, доступ к которому можно ограничить. В отличие от классических, в распределённых системах контроля версий центральный репозиторий не является обязательным. Среди классических VCS наиболее известны CVS, Subversion, а среди распределённых — Git, Bazaar, Mercurial. Принципы их работы схожи, отличаются они в основном синтаксисом используемых в работе команд.\nОсновные команды git Наиболее часто используемые команды git:\n  создание основного дерева репозитория: git init\n  получение обновлений (изменений) текущего дерева из центрального репозитория: git pull\n  отправка всех произведённых изменений локального дерева в центральный репозиторий: git push\n  просмотр списка изменённых файлов в текущей директории: git status\n  просмотр текущих изменения: git diff\n  сохранение текущих изменений:\n добавить все изменённые и/или созданные файлы и/или каталоги: git add . добавить конкретные изменённые и/или созданные файлы и/или каталоги: git add имена_файлов    удалить файл и/или каталог из индекса репозитория (при этом файл и/или каталог остаётся в локальной директории): git rm имена_файлов\n  сохранение добавленных изменений:\n сохранить все добавленные изменения и все изменённые файлы: git commit -am \u0026#39;Описание коммита\u0026#39; сохранить добавленные изменения с внесением комментария через встроенный редактор: git commit    создание новой ветки, базирующейся на текущей: git checkout -b имя_ветки\n  переключение на некоторую ветку: git checkout имя_ветки (при переключении на ветку, которой ещё нет в локальном репозитории, она будет создана и связана с удалённой)\n  отправка изменений конкретной ветки в центральный репозиторий: git push origin имя_ветки\n  слияние ветки с текущим деревом: git merge --no-ff имя_ветки\n  удаление ветки:\n удаление локальной уже слитой с основным деревом ветки: git branch -d имя_ветки принудительное удаление локальной ветки: git branch -D имя_ветки удаление ветки с центрального репозитория: git push origin :имя_ветки    Стандартные процедуры работы при наличии центрального репозитория Работа пользователя со своей веткой начинается с проверки и получения изменений из центрального репозитория (при этом в локальное дерево до начала этой процедуры не должно было вноситься изменений):\ngit checkout master\rgit pull\rgit checkout -b имя_ветки Затем можно вносить изменения в локальном дереве и/или ветке. После завершения внесения какого-то изменения в файлы и/или каталоги проекта необходимо разместить их в центральном репозитории.Для этого необходимо проверить, какие файлы изменились к текущему моменту:\ngit status и при необходимости удаляем лишние файлы, которые не хотим отправлять в центральный репозиторий. Затем полезно …","date":1651881600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1651881600,"objectID":"4eee1da3ae8e5c7b659ad76819ed4768","permalink":"https://example.com/post/git-intro/","publishdate":"2022-05-07T00:00:00Z","relpermalink":"/post/git-intro/","section":"post","summary":"Система контроля версий git","tags":["Academic","开源"],"title":"Система контроля версий git","type":"post"},{"authors":["Egor Starovoytov","吳恩達"],"categories":["Demo","教程"],"content":"Overview  The Wowchemy website builder for Hugo, along with its starter templates, is designed for professional creators, educators, and teams/organizations - although it can be used to create any kind of site The template can be modified and customised to suit your needs. It’s a good platform for anyone looking to take control of their data and online identity whilst having the convenience to start off with a no-code solution (write in Markdown and customize with YAML parameters) and having flexibility to later add even deeper personalization with HTML and CSS You can work with all your favourite tools and apps with hundreds of plugins and integrations to speed up your workflows, interact with your readers, and much more    The template is mobile first with a responsive design to ensure that your site looks stunning on every device.  Get Started  👉 Create a new site 📚 Personalize your site 💬 Chat with the Wowchemy community or Hugo community 🐦 Twitter: @wowchemy @GeorgeCushen #MadeWithWowchemy 💡 Request a feature or report a bug for Wowchemy ⬆️ Updating Wowchemy? View the Update Tutorial and Release Notes  Crowd-funded open-source software To help us develop this template and software sustainably under the MIT license, we ask all individuals and businesses that use it to help support its ongoing maintenance and development via sponsorship.\n❤️ Click here to become a sponsor and help support Wowchemy’s future ❤️ As a token of appreciation for sponsoring, you can unlock these awesome rewards and extra features 🦄✨\nEcosystem  Hugo Academic CLI: Automatically import publications from BibTeX  Inspiration Check out the latest demo of what you’ll get in less than 10 minutes, or view the showcase of personal, project, and business sites.\nFeatures  Page builder - Create anything with widgets and elements Edit any type of content - Blog posts, publications, talks, slides, projects, and more! Create content in Markdown, Jupyter, or RStudio Plugin System - Fully customizable color and font themes Display Code and Math - Code highlighting and LaTeX math supported Integrations - Google Analytics, Disqus commenting, Maps, Contact Forms, and more! Beautiful Site - Simple and refreshing one page design Industry-Leading SEO - Help get your website found on search engines and social media Media Galleries - Display your images and videos with captions in a customizable gallery Mobile Friendly - Look amazing on every screen with a mobile friendly version of your site Multi-language - 34+ language packs including English, 中文, and Português Multi-user - Each author gets their own profile page Privacy Pack - Assists with GDPR Stand Out - Bring your site to life with animation, parallax backgrounds, and scroll effects One-Click Deployment - No servers. No databases. Only files.  Themes Wowchemy and its templates come with automatic day (light) and night (dark) mode built-in. Alternatively, visitors can choose their preferred mode - click the moon icon in the top right of the Demo to see it in action! Day/night mode can also be disabled by the site admin in params.toml.\nChoose a stunning theme and font for your site. Themes are fully customizable.\nLicense Copyright 2016-present George Cushen.\nReleased under the MIT license.\n","date":1607817600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1607817600,"objectID":"279b9966ca9cf3121ce924dca452bb1c","permalink":"https://example.com/post/getting-started/","publishdate":"2020-12-13T00:00:00Z","relpermalink":"/post/getting-started/","section":"post","summary":"Welcome 👋 We know that first impressions are important, so we've populated your new site with some initial content to help you get familiar with everything in no time.","tags":["Academic","开源"],"title":"Welcome to Wowchemy, the website builder for Hugo","type":"post"}]